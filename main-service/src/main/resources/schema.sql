CREATE TABLE IF NOT EXISTS users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY ,
    name VARCHAR(200),
    email VARCHAR(200),
    CONSTRAINT uq_users_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY ,
    name VARCHAR(50) NOT NULL ,
    CONSTRAINT uq_categories_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations
(
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY ,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY ,
    annotation VARCHAR(2000) NOT NULL ,
    category_id BIGINT NOT NULL CONSTRAINT events_categories_category_id_fk REFERENCES categories,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR(7000) NOT NULL ,
    eventDate TIMESTAMP WITHOUT TIME ZONE,
    initiator_id BIGINT NOT NULL CONSTRAINT events_users_user_id_fk REFERENCES users,
    location_id BIGINT NOT NULL CONSTRAINT events_locations_location_id_fk REFERENCES locations,
    paid BOOLEAN NOT NULL,
    participant_limit BIGINT NOT NULL ,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN NOT NULL ,
    state VARCHAR(10) NOT NULL ,
    title VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY ,
    created TIMESTAMP WITHOUT TIME ZONE,
    event_id BIGINT NOT NULL CONSTRAINT requests_events_event_id_fk REFERENCES events,
    requester_id BIGINT CONSTRAINT requests_users_user_id_fk REFERENCES users,
    status VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY ,
    title VARCHAR(50),
    pinned BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS events_compilations
(
    event_id BIGINT NOT NULL CONSTRAINT events_compilations_events_event_id_fk
        REFERENCES events ON DELETE CASCADE ,
    compilation_id BIGINT NOT NULL CONSTRAINT events_compilations_compilations_compilation_id_fk
        REFERENCES events ON DELETE CASCADE
);